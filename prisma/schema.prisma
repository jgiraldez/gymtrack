generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  displayName String?
  role        UserRole      @default(USER)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  trainingDays TrainingDay[]
  stats       UserStats?
}

model Exercise {
  id          String   @id @default(cuid())
  name        String
  description String
  muscleGroup String
  equipment   String[]
  difficulty  Difficulty
  instructions String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  series      Series[]
}

model Series {
  id          String   @id @default(cuid())
  exerciseId  String
  exercise    Exercise @relation(fields: [exerciseId], references: [id])
  trainingDayId String
  trainingDay TrainingDay @relation(fields: [trainingDayId], references: [id])
  reps        Int
  weight      Float
  notes       String?
  createdAt   DateTime @default(now())
}

model TrainingDay {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  date        DateTime
  name        String
  series      Series[]
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserStats {
  id              String   @id @default(cuid())
  userId          String   @unique
  user            User     @relation(fields: [userId], references: [id])
  totalWorkouts   Int      @default(0)
  totalExercises  Int      @default(0)
  lastWorkout     DateTime?
  favoriteExercises String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

enum Difficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
} 